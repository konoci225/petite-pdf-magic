
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://drjwwtbeqgugaqoembyy.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRyand3dGJlcWd1Z2Fxb2VtYnl5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU3NjQyMDcsImV4cCI6MjA2MTM0MDIwN30.5x2R0hSjKRnshPhS9MJ4IuweSutN08WzaFjFWFKgg3s";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      storage: localStorage,
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: false, // Disable session detection in URL to avoid potential issues
      flowType: 'pkce' // Use PKCE flow for enhanced security
    },
    global: {
      headers: {
        'x-client-info': 'lovable-admin-app'
      }
    }
  }
);

// Helper function to clean up auth state (prevent auth limbo)
export const cleanupAuthState = () => {
  // Remove standard auth tokens
  localStorage.removeItem('supabase.auth.token');
  // Remove all Supabase auth keys from localStorage
  Object.keys(localStorage).forEach((key) => {
    if (key.startsWith('supabase.auth.') || key.includes('sb-')) {
      localStorage.removeItem(key);
    }
  });
  // Remove from sessionStorage if in use
  Object.keys(sessionStorage || {}).forEach((key) => {
    if (key.startsWith('supabase.auth.') || key.includes('sb-')) {
      sessionStorage.removeItem(key);
    }
  });
};
